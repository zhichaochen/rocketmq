1、DefaultMQPushConsumerImpl

2、消息消费过程
    DefaultMQPushConsumerImpl#pullMessage

    消息的消费过程，就是从服务器拉取，然后消费者进行消费，
    再根据【业务反馈是否成功消费来推动消费进度】，
    也就是消息的【消费进度并不是保存在服务端】（比如 commitlog 文件中），
    而是保存在消费端（可以是本地（广播模式）、broke端（集群模式））

3、消费者拉取消息机制
    主题 ---》 消息队列(MessageQueue) 1 对多
    主题 ----》 消息生产者，，，一般主题会由多个生产者组成，生产者组
    主题 ---- 》 消息消费者，，一般一个主题也会被多个消费者消费

    那消息消费至少需要解决如下问题：
    1、一个消费组中多个消费者是如何对消息队列（1个主题多个消息队列）进行负载消费的。
    2、一个消费者中多个线程又是如何协作（并发）的消费分配给该消费者的消息队列中的消息呢？
    3、消息消费进度如何保存，包括MQ是如何知道消息是否正常被消费了。
    4、RocketMQ 推拉模式实现机制





5、拉取到消息后的回调处理
    DefaultMQPushConsumerImpl#pullMessage
    PullCallback pullCallback = new PullCallback()



6、